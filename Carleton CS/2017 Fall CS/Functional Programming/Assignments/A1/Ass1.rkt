#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.10 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 69 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 6 #"Menlo\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 3627 0 24 3 1 #" "
0 0 17 3 89
(
 #"#|=================================================================="
 #"====================="
) 0 0 17 29 1 #"\n"
0 0 17 3 8 #"COMP3007"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"Assignment 1:"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"Sam Diamantstein, Student #: 101060342"
0 0 17 29 1 #"\n"
0 0 17 3 118
(
 #"There are no special instructions for running this software. Testing"
 #" can be found commented at the bottom of the file."
) 0 0 17 29 1 #"\n"
0 0 17 3 90
(
 #"===================================================================="
 #"=================== |#"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";============================= Question 1 =========================="
 #"=== "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";1a"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"( "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";1b"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         ( "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         ( "
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";1c"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";1d"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 3 #"2.8"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"4.2"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";============================= Question 2 =========================="
 #"=== "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";2a"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"reciprocal"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 17 3 73
(
 #"; allow for negative number, if divided by zero, return false, esle "
 #"do it"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 170
(
 #"; NOTE TO TA, THE FUNCTION BELOW, LINES 54-56, IS THE SAME AS ABOVE,"
 #" LINES 48-50, BUT ABBREVIATES THE WORD RECIPROCAL TO R FOR THE SAKE "
 #"OF USE IN NORMAL/APPLICATIVE ORDER"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 17 3 73
(
 #"; allow for negative number, if divided by zero, return false, esle "
 #"do it"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";2b"
0 0 17 3 1 #" "
0 0 17 3 1 #"f"
0 0 17 3 1 #"("
0 0 17 3 1 #"x"
0 0 17 3 1 #")"
0 0 17 3 10 #"= 3x + 3/x"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ( "
0 0 14 3 2 #"if"
0 0 24 3 3 #" ( "
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"reciprocal"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #" )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"reciprocal"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 6 #")) ) )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";2c g(x) =  X * 4^-1 "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoC"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 3 #" ( "
0 0 14 3 10 #"reciprocal"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";2d"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoD"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"      ( ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoC"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #" ) ("
0 0 14 3 4 #"twoB"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 6 #" ))  )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"      ( ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #" ) ("
0 0 14 3 4 #"twoC"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 6 #" ))  )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"      ( ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 6 #")    ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoC"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 5 #" )) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 1 #"("
0 0 14 3 4 #"twoC"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 8 #"))   ) )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";2e    (h (* 2 2)(reciprocal (/ 1 4)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"twoD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #")("
0 0 14 3 10 #"reciprocal"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"twoD"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"reciprocal"
0 0 24 3 1 #" "
0 8          10 21 4 #"1/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"twoD"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 8          10 21 4 #"1/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"twoD"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoC"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #" )) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 1 #"("
0 0 14 3 4 #"twoC"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 7 #" ) )) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 3 #"(  "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 7 #" ) ) ) "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #" )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 6 #")) ) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #" )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")) ) "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 8          10 21 4 #"1/8\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; 2f  (h (* 2 2)(reciprocal (/ 1 4)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"twoD"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #")("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 6 #") )) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 1 #"("
0 0 14 3 4 #"twoC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")))) "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #") ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" ))) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"twoB"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 8 #" ))   ) "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #") ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #") ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 9 #" )))) ) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #") ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 9 #" )))) ) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #") ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 8          10 21 4 #"1/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 3 7 #"))) ) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #") ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 6 #")) ) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 6 #")) ) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 8          10 21 4 #"1/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 3 4 #") )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 6 #")) ) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #" )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 6 #")) ) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #" )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #") ) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #") ) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #" ) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #" )) )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 8          10 21 4 #"1/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 3 4 #") )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #" )("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #"("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")) ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 12 #" )))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 8          10 21 4 #"1/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 3 10 #"))) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 9 #")) )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 8 #") )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 7 #" )     "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 8          10 21 4 #"1/8\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";============================= Question 3 =========================="
 #"=== "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";3"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"quad"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"   (  ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #") ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 3 #")  "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"   (  ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 19 #")                  "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"   (  "
0 0 21 3 2 #"#t"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"/"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #")  ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #") ( "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 8 #"))) )  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 5 #")  ))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";============================= Question 4 =========================="
 #"=== "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";4a"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"*"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")) ( "
0 0 14 3 4 #"expt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #") ) "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 6 #"  )  )"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"*"
0 0 24 3 3 #" ( "
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #")) ( "
0 0 14 3 4 #"expt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #") ) "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 7 #"  )  ) "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";4b"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 136
(
 #";  define base case, and break then. otherwise, keep calling recursi"
 #"ve functions till we get to that point, and decrement x -1 and x -2 "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"fibrec"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 4 #" (( "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"        (( "
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 3 #" ( "
0 0 14 3 6 #"fibrec"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 6 #"fibrec"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                 )))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";4c"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"( "
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"testfib"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 4 #"prec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #" ( "
0 0 14 3 2 #"if"
0 0 24 3 3 #" ( "
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fibo"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")("
0 0 14 3 6 #"fibrec"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 4 #") ))"
0 0 14 3 4 #"prec"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";============================= Question 5 =========================="
 #"=== "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";5a Applicative Order"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 6 #"p)(p))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 4 #"test"
0 0 17 3 1 #" "
0 0 17 3 4 #"x y)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 14 #";  (if (= x 0)"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 6 #";    x"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 7 #";   y))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";(test 0 (p))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Under"
0 0 17 3 1 #" "
0 0 17 3 11 #"Applicative"
0 0 17 3 1 #" "
0 0 17 3 5 #"order"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 4 #"when"
0 0 17 3 2 #" ("
0 0 17 3 4 #"test"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #" ("
0 0 17 3 1 #"p"
0 0 17 3 3 #")) "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 9 #"evaluated"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 14 #"subexppresions"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 9 #"evaluated"
0 0 17 3 1 #" "
0 0 17 3 5 #"first"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 4 #"such"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"following"
0 0 17 3 1 #" "
0 0 17 3 11 #"will occur."
0 0 24 29 1 #"\n"
0 0 17 3 3 #";1."
0 0 17 3 1 #" "
0 0 17 3 4 #"zero"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"being"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 7 #"literal"
0 0 17 3 1 #" "
0 0 17 3 5 #"value"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 4 #"will"
0 0 17 3 1 #" "
0 0 17 3 8 #"yield 0."
0 0 24 29 1 #"\n"
0 0 17 3 3 #";2."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 6 #"second"
0 0 17 3 1 #" "
0 0 17 3 9 #"arguement"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"being"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 4 #"call"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 7 #"invokes"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 11 #"procedure p"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";3."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 4 #"body"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 1 #"p"
0 0 17 3 1 #" "
0 0 17 3 4 #"then"
0 0 17 3 1 #" "
0 0 17 3 8 #"replaces"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"parameter"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 13 #"is evaluated."
0 0 24 29 1 #"\n"
0 0 17 3 3 #";4."
0 0 17 3 1 #" "
0 0 17 3 7 #"Because"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"body"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 1 #"p"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 9 #"evaluates"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 1 #"p"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 5 #"never"
0 0 17 3 1 #" "
0 0 17 3 6 #"ending"
0 0 17 3 1 #" "
0 0 17 3 4 #"loop"
0 0 17 3 1 #" "
0 0 17 3 7 #"begins."
0 0 17 3 1 #" "
0 0 17 3 2 #"In"
0 0 17 3 1 #" "
0 0 17 3 5 #"other"
0 0 17 3 1 #" "
0 0 17 3 5 #"words"
0 0 17 3 2 #"  "
0 0 17 3 2 #"we"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 4 #"left"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 13 #"evaluation of"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 6 #"; what"
0 0 17 3 1 #" "
0 0 17 3 2 #"we"
0 0 17 3 1 #" "
0 0 17 3 4 #"were"
0 0 17 3 1 #" "
0 0 17 3 4 #"just"
0 0 17 3 1 #" "
0 0 17 3 6 #"trying"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 9 #"evaluate."
0 0 17 3 1 #" "
0 0 17 3 2 #"As"
0 0 17 3 1 #" "
0 0 17 3 4 #"such"
0 0 17 3 1 #" "
0 0 17 3 2 #"we"
0 0 17 3 1 #" "
0 0 17 3 5 #"never"
0 0 17 3 1 #" "
0 0 17 3 6 #"finish"
0 0 17 3 1 #" "
0 0 17 3 15 #"evaluating test"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";5b Normal Order"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Under"
0 0 17 3 1 #" "
0 0 17 3 6 #"notmal"
0 0 17 3 8 #" order, "
0 0 17 3 4 #"when"
0 0 17 3 2 #" ("
0 0 17 3 4 #"test"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #" ("
0 0 17 3 1 #"p"
0 0 17 3 3 #")) "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 84
(
 #"evaluated, the argument sub-expressions is left untouched and is onl"
 #"y evaluated once"
) 0 0 17 3 6 #" there"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 2 #"no"
0 0 17 3 1 #" "
0 0 17 3 4 #"more"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 5 #"calls"
0 0 17 3 1 #" "
0 0 17 3 4 #"left"
0 0 17 3 1 #" "
0 0 17 3 7 #"to make"
0 0 24 29 1 #"\n"
0 0 17 3 159
(
 #"; 1.  the value p in (test 0 (p)) is replaced with (if (= x 0) x y )"
 #", where the values x and y are replaced with the corresponding argue"
 #"ments x = 0 and y = (p)"
) 0 0 24 29 1 #"\n"
0 0 17 3 141
(
 #"; 2.  then (if (= 0 0) 0 (p) ) is evaluated, and because zero(0) is "
 #"equal to zero(0), the function evaluated as true and returns the val"
 #"ue 0."
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #"; 3.  In effect  (test 0 (p)) returns 0."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";============================= Question 6 =========================="
 #"=== "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #"#|6 :  To apply a compound procedure to arguments, evaluate the body"
 #" of the procedure with"
) 0 0 17 3 1 #" "
0 0 17 3 4 #"each"
0 0 17 3 1 #" "
0 0 17 3 6 #"formal"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"       parameter"
0 0 17 3 1 #" "
0 0 17 3 8 #"replaced"
0 0 17 3 1 #" "
0 0 17 3 2 #"by"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 13 #"corresponding"
0 0 17 3 10 #" argument."
0 0 17 29 1 #"\n"
0 0 17 3 14 #"       (define"
0 0 17 3 2 #" ("
0 0 17 3 11 #"a-b a b) (("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"+"
0 0 17 3 3 #")(("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"-"
0 0 17 3 2 #")("
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 4 #"*)) "
0 0 17 3 2 #"a "
0 0 17 3 1 #"b"
0 0 17 3 2 #"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"CASE"
0 0 17 3 1 #" "
0 0 17 3 4 #"ONE:"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"b\""
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 7 #"greater"
0 0 17 3 1 #" "
0 0 17 3 4 #"than"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"a\""
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 3 #"any"
0 0 17 3 1 #" "
0 0 17 3 6 #"value:"
0 0 17 3 1 #" "
0 0 17 3 3 #"Sum"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"value"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 2 #"b:"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 4 #")   "
0 0 17 3 3 #"Ex."
0 0 17 3 1 #"("
0 0 17 3 3 #"a-b"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 2 #") "
0 0 17 3 3 #"-->"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"STEPS:"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"1."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"step"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 8 #"evaluate"
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"conditions"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 2 #"do"
0 0 17 3 1 #" "
0 0 17 3 2 #"so"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"parameters"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 8 #"replaced"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 5 #"their"
0 0 17 3 1 #" "
0 0 17 3 11 #"appropriate"
0 0 17 3 1 #" "
0 0 17 3 6 #"values"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 3 #"a-b"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 3 3 #"-->"
0 0 17 3 4 #"  (("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"+"
0 0 17 3 3 #")(("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"-"
0 0 17 3 2 #")("
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 3 3 #"-->"
0 0 17 3 4 #"  (("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"+"
0 0 17 3 3 #")(("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"-"
0 0 17 3 2 #")("
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 7 #")      "
0 0 17 3 30 #";this returns the \"+\" operator"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"2."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 6 #"second"
0 0 17 3 1 #" "
0 0 17 3 4 #"step"
0 0 17 3 1 #" "
0 0 17 3 6 #"follow"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"fact"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 9 #"condition"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 9 #"satisfied"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"next"
0 0 17 3 1 #" "
0 0 17 3 4 #"step"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 8 #"evaluate"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 8 #"operator"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 3 #"  ("
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #")"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 7 #"results"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"answer"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"1:"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"      ( ("
0 0 17 3 1 #"+"
0 0 17 3 2 #") "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"-->"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 150
(
 #"===================================================================="
 #"===================================================================="
 #"=============="
) 0 0 17 29 1 #"\n"
0 0 17 3 4 #"CASE"
0 0 17 3 1 #" "
0 0 17 3 4 #"TWO:"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"b\""
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 5 #"equal"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 4 #"zero"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"a\""
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 9 #"anything:"
0 0 17 3 1 #" "
0 0 17 3 4 #"Take"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"difference"
0 0 17 3 1 #" "
0 0 17 3 7 #"between"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"value"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 2 #"b:"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 4 #")   "
0 0 17 3 3 #"Ex."
0 0 17 3 1 #"("
0 0 17 3 3 #"a-b"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 3 #"-->"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"STEPS:"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"1."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"step"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 8 #"evaluate"
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"conditions"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 2 #"do"
0 0 17 3 1 #" "
0 0 17 3 2 #"so"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"parameters"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 8 #"replaced"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 5 #"their"
0 0 17 3 1 #" "
0 0 17 3 11 #"appropriate"
0 0 17 3 1 #" "
0 0 17 3 6 #"values"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 3 #"a-b"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"-->"
0 0 17 3 5 #"   (("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"+"
0 0 17 3 3 #")(("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"-"
0 0 17 3 2 #")("
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"-->"
0 0 17 3 5 #"   (("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"+"
0 0 17 3 3 #")(("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"-"
0 0 17 3 2 #")("
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 11 #")          "
0 0 17 3 30 #";this returns the \"-\" operator"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"2."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 6 #"second"
0 0 17 3 1 #" "
0 0 17 3 4 #"step"
0 0 17 3 1 #" "
0 0 17 3 6 #"follow"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"fact"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"second"
0 0 17 3 1 #" "
0 0 17 3 9 #"condition"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 9 #"satisfied"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"next"
0 0 17 3 1 #" "
0 0 17 3 4 #"step"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 8 #"evaluate"
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 8 #"operator"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 2 #" ("
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 2 #") "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 7 #"results"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"answer"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"-1:"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"    ( ("
0 0 17 3 1 #"-"
0 0 17 3 2 #") "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"-->"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 29 1 #"\n"
0 0 17 3 150
(
 #"===================================================================="
 #"===================================================================="
 #"=============="
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"CASE"
0 0 17 3 1 #" "
0 0 17 3 6 #"THREE:"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"b\""
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 4 #"less"
0 0 17 3 1 #" "
0 0 17 3 4 #"than"
0 0 17 3 1 #" "
0 0 17 3 4 #"zero"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"\"a\""
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 8 #"anything"
0 0 17 3 1 #" "
0 0 17 3 1 #":"
0 0 17 3 1 #" "
0 0 17 3 4 #"Find"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 7 #"product"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"value"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 2 #"b:"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 4 #")   "
0 0 17 3 3 #"Ex."
0 0 17 3 1 #"("
0 0 17 3 3 #"a-b"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 2 #") "
0 0 17 3 3 #"-->"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"STEPS:"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"1."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"step"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 8 #"evaluate"
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"conditions"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 2 #"do"
0 0 17 3 1 #" "
0 0 17 3 2 #"so"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"parameters"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 8 #"replaced"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 5 #"their"
0 0 17 3 1 #" "
0 0 17 3 11 #"appropriate"
0 0 17 3 1 #" "
0 0 17 3 6 #"values"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 3 #"a-b"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"-->"
0 0 17 3 5 #"   (("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"+"
0 0 17 3 3 #")(("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"-"
0 0 17 3 2 #")("
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"-->"
0 0 17 3 5 #"   (("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"+"
0 0 17 3 3 #")(("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 2 #") "
0 0 17 3 1 #"-"
0 0 17 3 2 #")("
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 1 #"*"
0 0 17 3 3 #")) "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 3 #")  "
0 0 17 3 4 #"this"
0 0 17 3 1 #" "
0 0 17 3 7 #"returns"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"+\""
0 0 17 3 1 #" "
0 0 17 3 8 #"operator"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"2."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 6 #"second"
0 0 17 3 1 #" "
0 0 17 3 4 #"step"
0 0 17 3 1 #" "
0 0 17 3 6 #"follow"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"fact"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 9 #"condition"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 7 #"invoked"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"next"
0 0 17 3 1 #" "
0 0 17 3 4 #"step"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 8 #"evaluate"
0 0 17 3 1 #" "
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 8 #"operator"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 2 #" ("
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 2 #") "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 7 #"results"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"answer"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"-1:"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"    ( ("
0 0 17 3 1 #"*"
0 0 17 3 2 #") "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"-->"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 152
(
 #"===================================================================="
 #"===================================================================="
 #"==============|#"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"#|============================= TESTING ============================"
 #"= "
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 70
(
 #"============================= Question 1 ==========================="
 #"=="
) 0 0 17 29 1 #"\n"
0 0 17 3 31 #"    a. -1 + 2 + -3 + 4 + -5 + 6"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"TEST: Determined answer with a calculator."
0 0 17 29 1 #"\n"
0 0 17 3 18 #"EXPECTED OUTPUT: 3"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"ACTUAL OUTPUT:   3"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"    b. 1-(6+7)*(4-6*2)+12"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"TEST:Determined answer with a calculator."
0 0 17 29 1 #"\n"
0 0 17 3 21 #"EXPECTED OUTPUT: 117."
0 0 17 29 1 #"\n"
0 0 17 3 20 #"ACTUAL OUTPUT:   117"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"    c. -3-((9-2+12)*2/(20-2*5))"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"TEST:Determined answer with a calculator."
0 0 17 29 1 #"\n"
0 0 17 3 24 #"EXPECTED OUTPUT: -6 4/5."
0 0 17 29 1 #"\n"
0 0 17 3 23 #"ACTUAL OUTPUT:   -6 4/5"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"    d. (1/3 + 2/6) * 4.2+2.8"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"TEST:Determined answer with a calculator."
0 0 17 29 1 #"\n"
0 0 17 3 20 #"EXPECTED OUTPUT: 5.6"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"ACTUAL OUTPUT:   5.6"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 70
(
 #"============================= Question 2 ==========================="
 #"=="
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"============2a============"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"SIMPLE   ("
0 0 17 3 10 #"reciprocal"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"    Expected --> 1"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Actual --> 1"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"EDGE  ("
0 0 17 3 10 #"reciprocal"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"   Expected-->"
0 0 17 3 1 #" "
0 0 17 3 2 #"#f"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Actual--> #f"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"LARGE # ("
0 0 17 3 10 #"reciprocal"
0 0 17 3 1 #" "
0 0 17 3 4 #"1000"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Expected--> "
0 8          10 17 7 #"1/1000\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"   Actual "
0 0 17 3 4 #"--> "
0 8          10 17 7 #"1/1000\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"OTHER ("
0 0 17 3 10 #"reciprocal"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"   Expected--> -1"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Actual--> -1"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"============2b============"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"SIMPLE   (twoB "
0 0 17 3 1 #"1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"    Expected --> 6"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Actual --> 6"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"EDGE  (twoB "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"   Expected-->"
0 0 17 3 1 #" "
0 0 17 3 2 #"#f"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Actual--> #f"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"LARGE # (twoB "
0 0 17 3 4 #"1000"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Expected--> "
0 8          10 17 13 #"3000003/1000\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"   Actual "
0 0 17 3 4 #"--> "
0 8          10 17 13 #"3000003/1000\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"OTHER (twoB "
0 0 17 3 3 #"-1)"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"   Expected--> -6"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Actual--> -6"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"============2c============"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"SIMPLE   (twoC "
0 0 17 3 1 #"1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"    Expected --> "
0 8          10 17 4 #"1/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"   Actual --> "
0 8          10 17 4 #"1/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"EDGE  (twoC "
0 0 17 3 1 #"0"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"   Expected-->"
0 0 17 3 2 #" 0"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"   ACTUAL--> 0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"LARGE # (twoC "
0 0 17 3 4 #"1000"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"   Expected--> 250"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"   Actual "
0 0 17 3 7 #"--> 250"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"OTHER (twoC "
0 0 17 3 3 #"-1)"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Expected--> "
0 8          10 17 5 #"-1/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"   Actual--> "
0 8          10 17 5 #"-1/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"============2d============"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"SIMPLE   (twoD 4 4)"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"   Expected --> "
0 8          10 17 4 #"3/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"   Actual --> "
0 8          10 17 4 #"3/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"EDGE  (twoD -1 -1)"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"   Expected-->"
0 0 17 3 1 #" "
0 8          10 17 6 #"51/43\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"   Actual--> "
0 8          10 17 6 #"51/43\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"LARGE # (twoD 99 100)"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Expected--> "
0 8          10 17 10 #"825/10001\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"   Actual "
0 0 17 3 4 #"--> "
0 8          10 17 10 #"825/10001\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"OTHER (twoD "
0 0 17 3 6 #"-1 10)"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Expected--> "
0 8          10 17 7 #"-5/606\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"   Actual--> "
0 8          10 17 7 #"-5/606\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"============2e============"
0 0 17 29 1 #"\n"
0 0 17 3 61
#"No testing needed, run code to see that each line results in "
0 8          10 17 4 #"3/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 26 #"============2f============"
0 0 17 29 1 #"\n"
0 0 17 3 61
#"No testing needed, run code to see that each line results in "
0 8          10 17 4 #"3/4\0"
3 #"#e\0"
6 #"mixed\0"
2 #"1\0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 70
(
 #"============================= Question 3 ==========================="
 #"=="
) 0 0 17 29 1 #"\n"
0 0 17 3 23 #"SIMPLE   (quad 1 1 -30)"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"    Expected --> 5"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Actual --> 5"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"EDGE1  ("
0 0 17 3 4 #"quad"
0 0 17 3 26 #" 0 20 10)     ; a = 0 case"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"   Expected-->"
0 0 17 3 3 #" #f"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   ACTUAL--> #f"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"EDGE2  (quad 0 0 0)"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"   Expected-->"
0 0 17 3 3 #" #f"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   ACTUAL--> #f"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"LARGE # (quad 400 2 5)"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"   Expected--> #f"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"   Actual "
0 0 17 3 6 #"--> #f"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"OTHER (quad "
0 0 17 3 9 #"-1 -1 -1)"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"   Expected--> #f"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"   Actual--> #f"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 70
(
 #"============================= Question 4 ==========================="
 #"=="
) 0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"============4a============"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"TEST #1:(fibo 0)"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"EXPECTED OUTPUT: 0"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"ACTUAL OUTPUT:   0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"TEST #2:(fibo 1)"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"EXPECTED OUTPUT: 1"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"ACTUAL OUTPUT:   1"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"TEST #3:(fibo 6)"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"EXPECTED OUTPUT: 8"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"ACTUAL OUTPUT:   8"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"============4b============"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"TEST #1:(fibrec 0)"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"EXPECTED OUTPUT: 0"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"ACTUAL OUTPUT:   0"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"TEST #2:(fibrec 1)"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"EXPECTED OUTPUT: 1"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"ACTUAL OUTPUT:   1"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"TEST #3:(fibrec 6)"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"EXPECTED OUTPUT: 8"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"ACTUAL OUTPUT:   8"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"============4c============"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"TEST #1: (testfib 30 0)"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"EXPECTED OUTPUT: (fibo 30) => 832040.0000000008"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"                 (fibrec 30) => 832040"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                 #f"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"ACTUAL OUTPUT:   (fibo 30) => 832040.0000000008"
0 0 17 29 1 #"\n"
0 0 17 3 38 #"                 (fibrec 30) => 832040"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                 #f"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"TEST #2:(testfib 40 0.000000001)"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"EXPECTED OUTPUT: (fibo 40) => 102334154.9999999"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"                 (fibrec 40) => 102334155"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                 #f"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"ACTUAL OUTPUT:   (fibo 40) => 102334155.00000013"
0 0 17 29 1 #"\n"
0 0 17 3 26 #"                 (fibrec 4"
0 0 17 3 15 #"0) => 102334155"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                 #f"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 70
(
 #"============================= Question 5 ==========================="
 #"=="
) 0 0 17 29 1 #"\n"
0 0 17 3 17 #"No testing needed"
0 0 17 29 1 #"\n"
0 0 17 3 70
(
 #"============================= Question 6 ==========================="
 #"=="
) 0 0 17 29 1 #"\n"
0 0 17 3 17 #"No testing needed"
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"Thank you very much"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
